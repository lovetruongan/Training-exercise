openapi: 3.0.1
info:
  title: Training API
  description: Training API
  version: v1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Generated server url
security:
  - bearerAuth: [ ]
paths:
  /patients/update/{patientID}:
    put:
      tags:
        - patient-controller
      operationId: updateUser
      parameters:
        - name: patientID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePatientResponse'
  /users:
    get:
      tags:
        - user-controller
      operationId: getUsers
      parameters:
        - name: sortBy
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListUserResponse'
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseUserResponse'
  /patients/create:
    post:
      tags:
        - patient-controller
      operationId: createUser_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCreateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePatientResponse'
  /common/send-email:
    post:
      tags:
        - common-controller
      operationId: sendEmail
      parameters:
        - name: recipients
          in: query
          required: true
          schema:
            type: string
        - name: subject
          in: query
          required: true
          schema:
            type: string
        - name: content
          in: query
          required: true
          schema:
            type: string
        - name: files
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /auth/outbound/authentication:
    post:
      tags:
        - authentication-controller
      operationId: outboundAuthenticate
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAuthenticationResponse'
  /auth/logout:
    post:
      tags:
        - authentication-controller
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoid'
  /auth/login:
    post:
      tags:
        - authentication-controller
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAuthenticationResponse'
  /auth/introspect:
    post:
      tags:
        - authentication-controller
      operationId: authenticate_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntrospectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseIntrospectResponse'
  /users/{userId}:
    get:
      tags:
        - user-controller
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseUserResponse'
  /patients:
    get:
      tags:
        - patient-controller
      summary: Get all patients
      operationId: getPatients
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListPatientResponse'
  /patients/{patientID}:
    get:
      tags:
        - patient-controller
      operationId: getPatient
      parameters:
        - name: patientID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePatientResponse'
  /patients/delete/{patientID}:
    delete:
      tags:
        - patient-controller
      operationId: deleteUser
      parameters:
        - name: patientID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePatientResponse'
components:
  schemas:
    PatientUpdateRequest:
      type: object
      properties:
        name:
          type: string
        gender:
          type: string
        age:
          type: integer
          format: int32
        email:
          type: string
        phone:
          type: string
    ApiResponsePatientResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/PatientResponse'
    PatientResponse:
      type: object
      properties:
        patient_id:
          type: integer
          format: int64
        name:
          type: string
        gender:
          type: string
        age:
          type: integer
          format: int32
        email:
          type: string
        phone:
          type: string
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
    UserCreateRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        birth:
          type: string
          format: date
    ApiResponseUserResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/UserResponse'
    UserResponse:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
        role:
          type: string
        birth:
          type: string
          format: date
        createdAt:
          type: string
          format: date
    PatientCreateRequest:
      type: object
      properties:
        name:
          type: string
        gender:
          type: string
        age:
          type: integer
          format: int32
        email:
          type: string
        phone:
          type: string
    ApiResponseObject:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: object
    ApiResponseAuthenticationResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/AuthenticationResponse'
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
        authenticated:
          type: boolean
    LogoutRequest:
      type: object
      properties:
        token:
          type: string
    ApiResponseVoid:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: object
    AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    IntrospectRequest:
      type: object
      properties:
        token:
          type: string
    ApiResponseIntrospectResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/IntrospectResponse'
    IntrospectResponse:
      type: object
      properties:
        valid:
          type: boolean
    ApiResponseListUserResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    ApiResponseListPatientResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/PatientResponse'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
